<UserControl x:Class="FiefApp.Module.Manor.UIElements.VillageUI.VillageUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:FiefApp.Common.Infrastructure.Behaviors;assembly=FiefApp.Common.Infrastructure"
             xmlns:iTextBox="clr-namespace:FiefApp.Common.Infrastructure.Controls.iTextBox;assembly=FiefApp.Common.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="144" 
             d:DesignWidth="457"
             x:Name="Self">

    <Grid x:Name="RootGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="457"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TreeView 
            Grid.ColumnSpan="1"
            Grid.RowSpan="3"
            VerticalContentAlignment="Center"
            Padding="0,3,0,0"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Disabled"
            Background="LightGray"
            BorderBrush="Gray"
            BorderThickness="0"
            Name="TreeView"
            IsTabStop="False">
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
            </TreeView.Resources>
            <TreeViewItem 
                Header="{Binding Path=Village}"
                Background="LightGray"
                Expanded="TreeViewItemIsExpandedCommand"
                Collapsed="TreeViewItemIsCollapsedCommand"
                IsExpanded="{Binding Path=IsExpanded, Mode=TwoWay}">
                <Grid 
                    Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="21"/>
                        <RowDefinition Height="3"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="77"/>
                        <ColumnDefinition Width="6"/>
                        <ColumnDefinition Width="45"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="86"/>
                        <ColumnDefinition Width="6"/>
                        <ColumnDefinition Width="45"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="86"/>
                        <ColumnDefinition Width="6"/>
                        <ColumnDefinition Width="45"/>
                    </Grid.ColumnDefinitions>

                    <Label
                        Grid.Column="0"
                        Grid.Row="0"
                        Content="Invånare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <TextBox
                        Grid.Column="2"
                        Grid.Row="0"
                        Text="{Binding Path=Population, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
                        Template="{DynamicResource TextBoxTemplate}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Padding="0"
                        IsTabStop="True"
                        TabIndex="1">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="IsReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Label
                        Grid.Column="0"
                        Grid.Row="2"
                        Content="Borgare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <TextBox
                        Grid.Column="2"
                        Grid.Row="2"
                        Text="{Binding Path=Burgess, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
                        Template="{DynamicResource TextBoxTemplate}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"
                        IsTabStop="True"
                        TabIndex="2">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="IsReadOnly" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Label
                        Grid.Column="0"
                        Grid.Row="4"
                        Content="Bönder"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <TextBox
                        Grid.Column="2"
                        Grid.Row="4"
                        Text="{Binding Path=Farmers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
                        Template="{DynamicResource TextBoxTemplate}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="IsReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Label
                        Grid.Column="0"
                        Grid.Row="6"
                        Content="Ofria bönder"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <TextBox
                        Grid.Column="2"
                        Grid.Row="6"
                        Text="{Binding Path=Serfdoms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
                        Template="{DynamicResource TextBoxTemplate}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="IsReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Label
                        Grid.Column="4"
                        Grid.Row="0"
                        Content="Båtbyggare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="6"
                        Grid.Row="0"
                        Value="{Binding Path=Boatbuilders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="4"
                        Grid.Row="2"
                        Content="Garvare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="6"
                        Grid.Row="2"
                        Value="{Binding Path=Tanners, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="4"
                        Grid.Row="4"
                        Content="Mjölnare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="6"
                        Grid.Row="4"
                        Value="{Binding Path=Millers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="4"
                        Grid.Row="6"
                        Content="Körsnärer"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="6"
                        Grid.Row="6"
                        Value="{Binding Path=Furriers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="8"
                        Grid.Row="0"
                        Content="Skräddare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="10"
                        Grid.Row="0"
                        Value="{Binding Path=Tailors, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="8"
                        Grid.Row="2"
                        Content="Smeder"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="10"
                        Grid.Row="2"
                        Value="{Binding Path=Smiths, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="8"
                        Grid.Row="4"
                        Content="Snickare"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="10"
                        Grid.Row="4"
                        Value="{Binding Path=Carpenters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Label
                        Grid.Column="8"
                        Grid.Row="6"
                        Content="Värdshusvärdar"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <iTextBox:iTextBox
                        Grid.Column="10"
                        Grid.Row="6"
                        Value="{Binding Path=Innkeepers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <iTextBox:iTextBox.Style>
                            <Style TargetType="{x:Type iTextBox:iTextBox}">
                                <Setter Property="TextBoxReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="TextBoxReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iTextBox:iTextBox.Style>
                    </iTextBox:iTextBox>

                    <Button
                        x:Name="EditButton"
                        Click="EditButton_OnClick"
                        Content="redigera"
                        Grid.Column="9"
                        Grid.ColumnSpan="2"
                        Grid.Row="8"
                        Template="{DynamicResource ButtonTemplate}"
                        Visibility="{Binding Path=EditButtonVisibility}"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                    <Button
                        x:Name="DeleteButton"
                        Click="DeleteButton_OnClick"
                        Content="tabort"
                        Grid.Column="6"
                        Grid.ColumnSpan="5"
                        Grid.Row="8"
                        Width="51"
                        Template="{DynamicResource ButtonTemplate}"
                        Visibility="{Binding Path=EditingVisibility}"
                        HorizontalAlignment="Right"
                        VerticalContentAlignment="Center"
                        Padding="0"
                        Margin="0,0,115,0"/>

                    <Button
                        x:Name="SaveButton"
                        Click="SaveButton_OnClick"
                        Content="spara"
                        Grid.Column="8"
                        Grid.Row="8"
                        Width="51"
                        Template="{DynamicResource ButtonTemplate}"
                        Visibility="{Binding Path=EditingVisibility}"
                        HorizontalAlignment="Right"
                        VerticalContentAlignment="Center"
                        Padding="0"
                        Margin="0,0,6,0"/>

                    <Button
                        x:Name="CancelButton"
                        Click="CancelButton_OnClick"
                        Content="avbryt"
                        Grid.Column="9"
                        Grid.ColumnSpan="2"
                        Grid.Row="8"
                        Template="{DynamicResource ButtonTemplate}"
                        Visibility="{Binding Path=EditingVisibility}"
                        VerticalContentAlignment="Center"
                        Padding="0"/>

                </Grid>
            </TreeViewItem>
        </TreeView>

        <TextBox
            Name="RenameTextBox"
            Text="{Binding Path=Village, Mode=TwoWay}"
            Grid.Column="0"
            Grid.Row="0"
            Width="150"
            Grid.ZIndex="10"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True"
            Template="{DynamicResource TextBoxTemplate}"
            Visibility="{Binding Path=EditingVisibility}"
            Background="LightGray"
            VerticalAlignment="Top"
            HorizontalAlignment="Left"
            HorizontalContentAlignment="Left"
            Margin="17,2,0,0"/>
    </Grid>
</UserControl>
